const mongoose = require("mongoose");

const diarySchema = new mongoose.Schema({
  title: {
    type: String,
    required: true,
  },
  text: {
    type: String,
    require: false,
  },
  date: {
    type: Date,
    required: true,
    set: (value) => {
      // Set the time component to midnight (00:00:00)
      if (value instanceof Date) {
        value.setHours(0, 0, 0, 0);
        return value;
      }
      return value;
    },
  },
  createdAt: {
    type: Date,
    default: () => new Date(Date.now() + 60 * 60 * 1000), // Set it one hour ahead
  },
  tag: {
    type: String,
    required: false,
  },
});

// Pre-save middleware to update the 'updatedAt' field before saving
diarySchema.pre("save", function (next) {
  this.updatedAt = Date.now();
  next();
});

const Diary = mongoose.model("Diary", diarySchema);

async function main() {
  await mongoose.connect("mongodb://127.0.0.1:27017/diary");
  console.log("Connected to db âœ…");
}

main().catch((error) => console.log(error));

module.exports = Diary;
