"use strict";

const Diary = require("../models/diary");

async function getAllDiaryEntries(req, res) {
  try {
    const allDiaryEntries = await Diary.find();
    res.status(200).json(allDiaryEntries);
  } catch (error) {
    console.log(error);
    res.status(500).json({ error: "Internal server error" });
  }
}
async function getRecentDiaryEntries(req, res) {
  try {
    const recentDiaryEntries = await Diary.find({}).sort({ date: -1 }).limit(3);

    res.status(200).send(recentDiaryEntries);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Internal server error" });
  }
}

async function getOneDiaryEntry(req, res) {
  try {
    const { id } = req.params;
    const oneDiaryEntry = await Diary.findById(id);

    if (!oneDiaryEntry) {
      return res.status(404).json({ message: "Diary entry not found" });
    }

    res.status(200).send(oneDiaryEntry);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Internal server error" });
  }
}

async function addDiaryEntry(req, res) {
  try {
    const diaryEntryToAdd = await Diary.create(req.body);
    res.status(201).json(diaryEntryToAdd);
  } catch (error) {
    console.log(error);
    res.status(500).json({ error: "Internal server error" });
  }
}

async function editDiaryEntry(req, res) {
  try {
    const { id } = req.params;
    const updatedData = req.body;

    const updatedDiaryEntry = await Diary.findByIdAndUpdate(id, updatedData, {
      new: true,
    });

    if (!updatedDiaryEntry) {
      return res.status(404).json({ message: "Diary entry not found" });
    }

    res.status(200).json(updatedDiaryEntry);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Internal server error" });
  }
}

async function deleteDiaryEntry(req, res) {
  try {
    const { id } = req.params;
    const deletedEntry = await Diary.findByIdAndDelete(id);

    if (!deletedEntry) {
      return res.status(404).json({ message: "Diary entry not found" });
    }

    res.status(200).send(`Deleted the following entry: ${deletedEntry}`);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Internal server error" });
  }
}

module.exports = {
  getAllDiaryEntries,
  getRecentDiaryEntries,
  getOneDiaryEntry,
  addDiaryEntry,
  editDiaryEntry,
  deleteDiaryEntry,
};
